@using System.Text.Json

@{
    ViewData["Title"] = "Tendencias de Ventas";
    var year = DateTime.Now.Year;
}

@functions {
    private static readonly Dictionary<string, string> _mapMetodos = new()
    {
        { "202", "EFECTIVO" },
        { "201", "PAGO DE UNA" },
        { "2",   "DEBITO PICHINCHA" },
        { "7",   "DEBITO GUAYAQUIL" },
        { "8",   "TARJETA CREDITO VISA" },
        { "9",   "TARJETA CREDITO MASTERCARD" }
    };

    public static string LabelMetodo(string k)
    {
        if (string.IsNullOrWhiteSpace(k))
            return "DESCONOCIDO";

        k = k.Trim();
        return _mapMetodos.TryGetValue(k, out var nombre)
            ? nombre
            : "TARJETA CREDITO";
    }

    public static string MetodoMapJson()
        => JsonSerializer.Serialize(_mapMetodos);
}

<h2>@ViewData["Title"]</h2>

<div class="row g-3 mb-3 sales-filters">
    <div class="col-lg-2">
        <label class="form-label">Año</label>
        <input id="year" type="number" class="form-control" value="@year" min="2000" max="2100" />
    </div>

    <div class="col-lg-3">
        <label class="form-label">Almacén</label>
        <div class="dropdown w-100">
            <button id="almacenDropdownBtn" class="btn btn-white border form-control text-start dropdown-toggle"
                    type="button" data-bs-toggle="dropdown" aria-expanded="false">
                (todos)
            </button>

            <div class="dropdown-menu p-2 w-100" style="max-height:280px; overflow:auto;">
                <div class="mb-2"><input id="almacenFilter" class="form-control form-control-sm" placeholder="Buscar almacén..." /></div>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="almacenAll">
                    <label class="form-check-label" for="almacenAll">Seleccionar todos</label>
                </div>
                <div id="almacenChecks"><!-- checks --></div>
            </div>
        </div>
        <small class="text-muted" id="almacenSummary">(todos)</small>
    </div>

    <div class="col-lg-3">
        <label class="form-label">Método de pago</label>
        <select id="metodoPago" class="form-select">
            <option value="">(todos)</option>
        </select>
    </div>

    <div class="col-lg-12 d-flex gap-2 mt-2">
        <button id="btnAplicar" class="btn btn-primary">Aplicar filtros</button>
        <button id="btnLimpiar" class="btn btn-outline-secondary">Limpiar</button>
    </div>
</div>

<div id="chartVentasMes" style="min-height: 420px;"></div>

<hr class="my-4" />
<h5 class="mb-2">Mapa de calor: Ventas por mes y almacén</h5>

<div id="chartHeatmap" style="min-height: 420px;"></div>

@section Styles {
    <link rel="stylesheet" href="~/css/sales.css" />
}

@section Scripts {
    <script>
        // Exponer el mapa y la función al cliente
        window.METODO_MAP = @Html.Raw(MetodoMapJson());
        window.labelMetodo = function (k) {
            if (!k) return 'DESCONOCIDO';
            k = ('' + k).trim();
            return (window.METODO_MAP && window.METODO_MAP[k]) ? window.METODO_MAP[k] : 'TARJETA CREDITO';
        };

        // Carga/recarga del combo de métodos de pago con etiquetas
        async function cargarMetodosPago() {
            const sel = document.getElementById('metodoPago');
            if (!sel) return;

            const year = document.getElementById('year')?.value ?? '';
            const categoria = document.getElementById('categoria')?.value ?? '';

            const url = `/api/charts/metodos-pago?year=${encodeURIComponent(year)}&categoria=${encodeURIComponent(categoria)}`;

            try {
                const r = await fetch(url);
                const codigos = await r.json(); // lista de códigos (strings)
                // limpiar excepto "(todos)"
                sel.querySelectorAll('option:not([value=""])').forEach(o => o.remove());

                (codigos || []).forEach(code => {
                    const opt = document.createElement('option');
                    opt.value = code;                   // sigue enviando el código al backend
                    opt.textContent = window.labelMetodo(code); // muestra nombre amigable
                    sel.appendChild(opt);
                });
            } catch (_) {
                // silencioso
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Cargar combo al inicio
            cargarMetodosPago();

            // Si cambian filtros que afectan la lista, recargar opciones
            document.getElementById('year')?.addEventListener('change', cargarMetodosPago);
            document.getElementById('categoria')?.addEventListener('input', () => {
                // pequeña espera para no recargar en cada tecla
                clearTimeout(window.__mpTimer);
                window.__mpTimer = setTimeout(cargarMetodosPago, 400);
            });
        });
    </script>

    <script src="~/js/sales-charts.js" asp-append-version="true" defer></script>
}
